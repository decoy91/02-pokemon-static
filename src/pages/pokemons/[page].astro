---
import type { GetStaticPaths } from "astro";
import PokemonCard from '../../components/pokemons/PokemonCard.astro';
import type { PokemonListResponse } from '../../interface/pokemon-list.response';
import Layout from '../../layouts/Layout.astro';
import Title from "@components/shared/Title.astro";


export const getStaticPaths = ( async({ paginate }) => {
	const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
	const {results} = (await resp.json()) as PokemonListResponse;
	return paginate(results, { pageSize:20});
}) satisfies GetStaticPaths;

const title = 'Pókemon Static | Home'

const { page } = Astro.props
---

<Layout title={ title }>
	<Title>Listado de Pokémons (Paginado)</Title>

	<section
	aria-label="Listado de Pókemons"
	class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-5 gap-4 mt-5"
	>
		{
			page.data.map(( pokemon ) => (
			<PokemonCard 
			name={ pokemon.name }
			url= { pokemon.url }
			/>
		))
		}
	</section>

	<section
	class="flex mt-10 gap-2 items-center">
	<!-- {
		(page.url.prev) && (
			<a class="btn" href={ page.url.prev }>( - )</a>
		)
	} -->
	<a 
	class:list={[
		'btn',
		{
			disabled: !page.url.prev
		},
	]}
	href={ page.url.prev }
	>
	( - )</a>

	<a 
	class:list={[
		'btn',
		{
			disabled: !page.url.next
		},
	]}
	href={ page.url.next }
	>
	( + )</a>
	<div class="flex flex-1"></div>
	<span class="text-xl font-bold">Pág. { page.currentPage} </span>
	
	</section>
</Layout>

<style>
	.btn{
		@reference "../../styles/global.css";
		@apply bg-blue-500 p-2 text-white rounded-md;
	}
	.disabled{
		@apply bg-gray-600 text-gray-400;
	}

</style>